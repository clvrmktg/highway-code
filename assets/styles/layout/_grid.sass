@use '../abstracts' as *
  
.container
  display: grid
  grid-template-rows: [ navbar-start ] max-content [ navbar-end main-start ] 1fr [main-end cta-start] max-content [cta-end footer-start] max-content [footer-end]
  +svh(min-height, 100)

.navbar
  grid-row: navbar

.main
  grid-row: main

.cta
  grid-row: cta

.footer
  grid-row: footer


// https://ryanmulligan.dev/blog/layout-breakouts/



.content-grid
  --padding-inline: 1em
  --content-max-width: #{rem(1300)}
  --breakout-max-width: #{rem(1350)}

  --content-size: min(100% - ((var(--padding-inline) * 2) + env(safe-area-inset-left) + env(safe-area-inset-right)), var(--content-max-width))
  --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2)
  
  display: grid
  grid-template-columns: [full-width-start] minmax(max(var(--padding-inline), env(safe-area-inset-left)), 1fr) [breakout-start] minmax(0, var(--breakout-size)) [content-start] var((--content-size)) [content-end] minmax(0, var(--breakout-size)) [breakout-end] minmax(max(var(--padding-inline), env(safe-area-inset-right)), 1fr)  [full-width-end]
  // padding-inline: env(safe-area-inset-left) env(safe-area-inset-right)

  > .breakout
    grid-column: breakout

  > .full-width
    grid-column: full-width

.content-grid, .full-width

  > :not(.breakout, .full-width)
    grid-column: content

.post-grid
  --padding-inline: 2em
  --content-max-width: #{rem(700)}
  --breakout-max-width: #{rem(1000)}

  --content-size: min(100%, var(--content-max-width))
  --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2)
  
  display: grid
  grid-template-columns: 1fr [breakout-start] minmax(0, var(--breakout-size)) [content-start] var((--content-size)) [content-end] minmax(0, var(--breakout-size)) [breakout-end] 1fr

  > .post-breakout
    grid-column: breakout

.post-grid, .post-breakout

  > :not(.post-breakout)
    grid-column: content


.layout

  &--sidebar

    +breakpoint(desktop)
      &--left
          grid-template-columns: [ a-start ] minmax(em(365), 1fr) [a-end b-start] minmax(em(200), em(800)) [b-end]
          // grid-template-areas: 'b a'

      &--right
        grid-template-columns: [ a-start ] minmax(em(200), em(800)) [a-end b-start] minmax(em(365), 1fr) [b-end]
        // grid-template-areas: 'a b'



.block
  display: block

.flex
  display: flex

+display(flex, lg)

+direction(column)
+direction(column, 'md')
+direction(column, 'lg')

+direction(row)
+direction(row, 'md')
+direction(row, 'lg')

  
.flex--wrap
  display: flex
  flex-wrap: wrap

// X Axis
.middle
  align-items: center

.lg\:middle
  +breakpoint(desktop)
    align-items: center

.bottom
  align-items: flex-end
  
// Y Axis
.center
  justify-content: center

// Spacing
.between
  justify-content: space-between

.lg\:between
  +breakpoint(desktop)
    justify-content: space-between

.end
  justify-content: flex-end

.grid
  display: grid

  &.center
    justify-items: center